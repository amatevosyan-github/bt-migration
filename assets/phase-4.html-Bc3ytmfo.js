import{_ as e,c as p,a as t,b as l,e as n,d as o,w as i,r as c,o as u}from"./app-xfFBTyOr.js";const r={};function d(k,s){const a=c("RouteLink");return u(),p("div",null,[s[2]||(s[2]=t(`<h1 id="фаза-4-миграция-модуля-auth" tabindex="-1"><a class="header-anchor" href="#фаза-4-миграция-модуля-auth"><span>Фаза 4: Миграция модуля Auth</span></a></h1><p><strong>Длительность:</strong> 2-3 недели</p><h2 id="цели-фазы" tabindex="-1"><a class="header-anchor" href="#цели-фазы"><span>Цели фазы</span></a></h2><p>Перенести модуль авторизации из <code>bit-team-auth-front</code> (React) на Vue 3, включая все страницы, компоненты и функциональность.</p><div class="hint-container tip"><p class="hint-container-title">Достижение MVP 1</p><p>По завершению этой фазы получаем <strong>MVP 1</strong> - работающую систему авторизации с полным функционалом.</p></div><h2 id="_4-1-компоненты-авторизации" tabindex="-1"><a class="header-anchor" href="#_4-1-компоненты-авторизации"><span>4.1 Компоненты авторизации</span></a></h2><h3 id="страницы-модуля" tabindex="-1"><a class="header-anchor" href="#страницы-модуля"><span>Страницы модуля</span></a></h3><p><strong>Расположение:</strong> <code>src/modules/auth/pages/</code></p><h4 id="loginpage" tabindex="-1"><a class="header-anchor" href="#loginpage"><span>LoginPage</span></a></h4><p><strong>Задачи:</strong></p><ul><li>[ ] Создать LoginPage - <code>src/modules/auth/pages/LoginPage.vue</code></li></ul><p><strong>Функциональность:</strong></p><ul><li>Email/пароль форма</li><li>OAuth кнопки (Google, Facebook, etc.)</li><li>Ссылка на регистрацию</li><li>Ссылка &quot;Forgot password&quot;</li><li>Remember me checkbox</li><li>Валидация формы</li><li>Error handling</li></ul><h4 id="registerpage" tabindex="-1"><a class="header-anchor" href="#registerpage"><span>RegisterPage</span></a></h4><p><strong>Задачи:</strong></p><ul><li>[ ] Создать RegisterPage - <code>src/modules/auth/pages/RegisterPage.vue</code></li></ul><p><strong>Функциональность:</strong></p><ul><li>Email, пароль, confirm password</li><li>Username (optional)</li><li>Валидация (сложность пароля, etc.)</li><li>Terms &amp; Conditions checkbox</li><li>Captcha (опционально)</li><li>Email verification notice после регистрации</li></ul><p><strong>Компоненты формы:</strong></p><h4 id="другие-страницы-auth-модуля" tabindex="-1"><a class="header-anchor" href="#другие-страницы-auth-модуля"><span>Другие страницы Auth модуля</span></a></h4><p><strong>Задачи:</strong></p><ul><li><p>[ ] <strong>ForgotPasswordPage</strong> - <code>src/modules/auth/pages/ForgotPasswordPage.vue</code></p><ul><li>Email форма для отправки ссылки восстановления</li><li>Success message после отправки</li></ul></li><li><p>[ ] <strong>ResetPasswordPage</strong> - <code>src/modules/auth/pages/ResetPasswordPage.vue</code></p><ul><li>Новый пароль + подтверждение</li><li>Redirect на login после успеха</li></ul></li><li><p>[ ] <strong>VerifyEmailPage</strong> - <code>src/modules/auth/pages/VerifyEmailPage.vue</code></p><ul><li>Loading state</li><li>Success/Error states</li><li>Кнопка resend email</li></ul></li><li><p>[ ] <strong>TwoFactorPage</strong> - <code>src/modules/auth/pages/TwoFactorPage.vue</code></p><ul><li>4-digit код инпут</li><li>Remember device checkbox</li><li>Resend code option</li><li>Backup codes link</li></ul></li></ul><h3 id="компоненты-форм" tabindex="-1"><a class="header-anchor" href="#компоненты-форм"><span>Компоненты форм</span></a></h3><p><strong>Расположение:</strong> <code>src/modules/auth/components/</code></p><h4 id="loginform" tabindex="-1"><a class="header-anchor" href="#loginform"><span>LoginForm</span></a></h4><p><strong>Задачи:</strong></p><ul><li>[ ] Создать LoginForm.vue</li></ul><h4 id="registerform" tabindex="-1"><a class="header-anchor" href="#registerform"><span>RegisterForm</span></a></h4><p><strong>Задачи:</strong></p><ul><li>[ ] Создать RegisterForm.vue</li><li>[ ] Валидация пароля (минимум 8 символов, буквы + цифры)</li><li>[ ] Password strength indicator</li><li>[ ] Terms &amp; Conditions checkbox</li></ul><h4 id="oauthbuttons" tabindex="-1"><a class="header-anchor" href="#oauthbuttons"><span>OAuthButtons</span></a></h4><p><strong>Задачи:</strong></p><ul><li>[ ] Создать OAuthButtons.vue</li></ul><h4 id="другие-компоненты" tabindex="-1"><a class="header-anchor" href="#другие-компоненты"><span>Другие компоненты</span></a></h4><p><strong>Задачи:</strong></p><ul><li>[ ] <strong>PasswordStrengthIndicator.vue</strong> - индикатор сложности пароля</li><li>[ ] <strong>TwoFactorInput.vue</strong> - 6-digit код инпут</li><li>[ ] <strong>EmailVerificationBanner.vue</strong> - баннер с напоминанием верифицировать email</li></ul><h2 id="_4-2-auth-middleware" tabindex="-1"><a class="header-anchor" href="#_4-2-auth-middleware"><span>4.2 Auth middleware</span></a></h2><h3 id="auth-guards" tabindex="-1"><a class="header-anchor" href="#auth-guards"><span>Auth Guards</span></a></h3><p><strong>Задачи:</strong></p><ul><li>[ ] <strong>authGuard</strong> - проверка авторизации (уже создан в Фазе 3)</li><li>[ ] <strong>guestGuard</strong> - только для неавторизованных (уже создан в Фазе 3)</li><li>[ ] <strong>kycGuard</strong> - требует KYC верификацию</li><li>[ ] <strong>emailVerifiedGuard</strong> - требует подтвержденный email</li></ul><h2 id="_4-3-composables" tabindex="-1"><a class="header-anchor" href="#_4-3-composables"><span>4.3 Composables</span></a></h2><h3 id="useauth" tabindex="-1"><a class="header-anchor" href="#useauth"><span>useAuth</span></a></h3><p><strong>Задачи:</strong></p><ul><li>[ ] Создать useAuth - <code>src/modules/auth/composables/useAuth.js</code></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useAuthStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../stores/auth.store&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> authStore <span class="token operator">=</span> <span class="token function">useAuthStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> authStore<span class="token punctuation">.</span>user<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> isAuthenticated <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> authStore<span class="token punctuation">.</span>isAuthenticated<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> isKycVerified <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> authStore<span class="token punctuation">.</span>isKycVerified<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> has2FA <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> authStore<span class="token punctuation">.</span>has2FA<span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token parameter">credentials</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> authStore<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>credentials<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> authStore<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> authStore<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">updateProfile</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> authStore<span class="token punctuation">.</span><span class="token function">updateProfile</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    user<span class="token punctuation">,</span></span>
<span class="line">    isAuthenticated<span class="token punctuation">,</span></span>
<span class="line">    isKycVerified<span class="token punctuation">,</span></span>
<span class="line">    has2FA<span class="token punctuation">,</span></span>
<span class="line">    login<span class="token punctuation">,</span></span>
<span class="line">    register<span class="token punctuation">,</span></span>
<span class="line">    logout<span class="token punctuation">,</span></span>
<span class="line">    updateProfile<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="use2fa" tabindex="-1"><a class="header-anchor" href="#use2fa"><span>use2FA</span></a></h3><p><strong>Задачи:</strong></p><ul><li>[ ] Создать use2FA - <code>src/modules/auth/composables/use2FA.js</code></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> authService <span class="token keyword">from</span> <span class="token string">&#39;@/shared/services/auth.service&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">use2FA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> qrCode <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> secret <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> backupCodes <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> error <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">enable2FA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> authService<span class="token punctuation">.</span><span class="token function">enable2FA</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      qrCode<span class="token punctuation">.</span>value <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>qrCode</span>
<span class="line">      secret<span class="token punctuation">.</span>value <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>secret</span>
<span class="line">      <span class="token keyword">return</span> response</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      error<span class="token punctuation">.</span>value <span class="token operator">=</span> err</span>
<span class="line">      <span class="token keyword">throw</span> err</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">      loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">verify2FA</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> authService<span class="token punctuation">.</span><span class="token function">verify2FA</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span></span>
<span class="line">      backupCodes<span class="token punctuation">.</span>value <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>backupCodes</span>
<span class="line">      <span class="token keyword">return</span> response</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      error<span class="token punctuation">.</span>value <span class="token operator">=</span> err</span>
<span class="line">      <span class="token keyword">throw</span> err</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">      loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">disable2FA</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> authService<span class="token punctuation">.</span><span class="token function">disable2FA</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> response</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      error<span class="token punctuation">.</span>value <span class="token operator">=</span> err</span>
<span class="line">      <span class="token keyword">throw</span> err</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">      loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    qrCode<span class="token punctuation">,</span></span>
<span class="line">    secret<span class="token punctuation">,</span></span>
<span class="line">    backupCodes<span class="token punctuation">,</span></span>
<span class="line">    loading<span class="token punctuation">,</span></span>
<span class="line">    error<span class="token punctuation">,</span></span>
<span class="line">    enable2FA<span class="token punctuation">,</span></span>
<span class="line">    verify2FA<span class="token punctuation">,</span></span>
<span class="line">    disable2FA<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usekyc" tabindex="-1"><a class="header-anchor" href="#usekyc"><span>useKYC</span></a></h3><p><strong>Задачи:</strong></p><ul><li>[ ] Создать useKYC - <code>src/modules/auth/composables/useKYC.js</code></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"><span class="token keyword">import</span> kycService <span class="token keyword">from</span> <span class="token string">&#39;@/shared/services/kyc.service&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useKYC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> status <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> documents <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> error <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">const</span> isVerified <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> status<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;verified&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> isPending <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> status<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> isRejected <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> status<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> kycService<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      status<span class="token punctuation">.</span>value <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>status</span>
<span class="line">      documents<span class="token punctuation">.</span>value <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>documents</span>
<span class="line">      <span class="token keyword">return</span> response</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      error<span class="token punctuation">.</span>value <span class="token operator">=</span> err</span>
<span class="line">      <span class="token keyword">throw</span> err</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">      loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">submitKYC</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> kycService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line">      status<span class="token punctuation">.</span>value <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>status</span>
<span class="line">      <span class="token keyword">return</span> response</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      error<span class="token punctuation">.</span>value <span class="token operator">=</span> err</span>
<span class="line">      <span class="token keyword">throw</span> err</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">      loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">uploadDocument</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    error<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span></span>
<span class="line">      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> type<span class="token punctuation">)</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> kycService<span class="token punctuation">.</span><span class="token function">uploadDocument</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span></span>
<span class="line">      documents<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> response</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      error<span class="token punctuation">.</span>value <span class="token operator">=</span> err</span>
<span class="line">      <span class="token keyword">throw</span> err</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">      loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    status<span class="token punctuation">,</span></span>
<span class="line">    documents<span class="token punctuation">,</span></span>
<span class="line">    loading<span class="token punctuation">,</span></span>
<span class="line">    error<span class="token punctuation">,</span></span>
<span class="line">    isVerified<span class="token punctuation">,</span></span>
<span class="line">    isPending<span class="token punctuation">,</span></span>
<span class="line">    isRejected<span class="token punctuation">,</span></span>
<span class="line">    getStatus<span class="token punctuation">,</span></span>
<span class="line">    submitKYC<span class="token punctuation">,</span></span>
<span class="line">    uploadDocument<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-4-layouts" tabindex="-1"><a class="header-anchor" href="#_4-4-layouts"><span>4.4 Layouts</span></a></h2><h3 id="authlayout" tabindex="-1"><a class="header-anchor" href="#authlayout"><span>AuthLayout</span></a></h3><p><strong>Задачи:</strong></p><ul><li>[ ] Создать AuthLayout - <code>src/shared/layouts/AuthLayout.vue</code></li></ul><h2 id="deliverables-фазы-4" tabindex="-1"><a class="header-anchor" href="#deliverables-фазы-4"><span>Deliverables фазы 4</span></a></h2><p>По завершению фазы 4 должны быть готовы:</p><ol><li>✅ <strong>Auth страницы</strong> - Login, Register, Forgot Password, Reset Password, Verify Email, 2FA</li><li>✅ <strong>Auth компоненты</strong> - формы, OAuth кнопки, и др.</li><li>✅ <strong>Auth guards</strong> - защита маршрутов</li><li>✅ <strong>Auth composables</strong> - useAuth, use2FA, useKYC</li><li>✅ <strong>Auth layout</strong> - красивый layout для auth страниц</li><li>✅ <strong>Auth flow</strong> - полный цикл регистрации и авторизации</li><li>✅ <strong>MVP 1</strong> - работающая авторизация!</li></ol><h2 id="чеклист-завершения-фазы-4" tabindex="-1"><a class="header-anchor" href="#чеклист-завершения-фазы-4"><span>Чеклист завершения фазы 4</span></a></h2><ul><li>[ ] LoginPage создан и работает</li><li>[ ] RegisterPage создан и работает</li><li>[ ] ForgotPasswordPage создан</li><li>[ ] ResetPasswordPage создан</li><li>[ ] VerifyEmailPage создан</li><li>[ ] TwoFactorPage создан</li><li>[ ] OAuth интеграция работает</li><li>[ ] Email verification работает</li><li>[ ] 2FA setup работает</li><li>[ ] Все формы валидируются</li><li>[ ] Auth guards работают</li><li>[ ] Composables созданы и работают</li><li>[ ] AuthLayout создан</li><li>[ ] Можно зарегистрироваться и войти</li></ul><h2 id="следующии-шаг" tabindex="-1"><a class="header-anchor" href="#следующии-шаг"><span>Следующий шаг</span></a></h2><p>После завершения фазы 4 переходим к:</p>`,64)),l("p",null,[s[1]||(s[1]=n("→ ",-1)),o(a,{to:"/phase-5.html"},{default:i(()=>[...s[0]||(s[0]=[n("Фаза 5: Миграция SPOT модуля",-1)])]),_:1})])])}const m=e(r,[["render",d]]),b=JSON.parse('{"path":"/phases/phase-4.html","title":"Фаза 4 - Миграция модуля Auth","lang":"ru-RU","frontmatter":{"title":"Фаза 4 - Миграция модуля Auth"},"headers":[{"level":2,"title":"Цели фазы","slug":"цели-фазы","link":"#цели-фазы","children":[]},{"level":2,"title":"4.1 Компоненты авторизации","slug":"_4-1-компоненты-авторизации","link":"#_4-1-компоненты-авторизации","children":[{"level":3,"title":"Страницы модуля","slug":"страницы-модуля","link":"#страницы-модуля","children":[]},{"level":3,"title":"Компоненты форм","slug":"компоненты-форм","link":"#компоненты-форм","children":[]}]},{"level":2,"title":"4.2 Auth middleware","slug":"_4-2-auth-middleware","link":"#_4-2-auth-middleware","children":[{"level":3,"title":"Auth Guards","slug":"auth-guards","link":"#auth-guards","children":[]}]},{"level":2,"title":"4.3 Composables","slug":"_4-3-composables","link":"#_4-3-composables","children":[{"level":3,"title":"useAuth","slug":"useauth","link":"#useauth","children":[]},{"level":3,"title":"use2FA","slug":"use2fa","link":"#use2fa","children":[]},{"level":3,"title":"useKYC","slug":"usekyc","link":"#usekyc","children":[]}]},{"level":2,"title":"4.4 Layouts","slug":"_4-4-layouts","link":"#_4-4-layouts","children":[{"level":3,"title":"AuthLayout","slug":"authlayout","link":"#authlayout","children":[]}]},{"level":2,"title":"Deliverables фазы 4","slug":"deliverables-фазы-4","link":"#deliverables-фазы-4","children":[]},{"level":2,"title":"Чеклист завершения фазы 4","slug":"чеклист-завершения-фазы-4","link":"#чеклист-завершения-фазы-4","children":[]},{"level":2,"title":"Следующий шаг","slug":"следующии-шаг","link":"#следующии-шаг","children":[]}],"git":{"updatedTime":1760568765000,"contributors":[{"name":"amatevosyan-github","username":"amatevosyan-github","email":"54032374+amatevosyan-github@users.noreply.github.com","commits":1,"url":"https://github.com/amatevosyan-github"}],"changelog":[{"hash":"ab127d1a1b75a8775a849043fe02244937ac319a","time":1760568765000,"email":"54032374+amatevosyan-github@users.noreply.github.com","author":"Arthur Matevosian","message":"init"}]},"filePathRelative":"phases/phase-4.md"}');export{m as comp,b as data};
